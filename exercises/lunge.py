from naoqi import ALProxy
import time

def lunge(tts, recog, memory, motion):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.194861, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.182588, [3, -0.386667, 0], [3, 0.4, 0]], [-0.200996, [3, -0.4, 0.00562461], [3, 0.4, -0.00562461]], [-0.216335, [3, -0.4, 0], [3, 0.4, 0]], [-0.216335, [3, -0.4, 0], [3, 0.533333, 0]], [-0.217869, [3, -0.533333, 0], [3, 0.4, 0]], [-0.217869, [3, -0.4, 0], [3, 0.533333, 0]], [-0.205598, [3, -0.533333, 0], [3, 0.666667, 0]], [-0.205598, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.00771189, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.0107799, [3, -0.386667, 0], [3, 0.4, 0]], [-0.0107799, [3, -0.4, 0], [3, 0.4, 0]], [-0.00771189, [3, -0.4, 0], [3, 0.4, 0]], [-0.00771189, [3, -0.4, 0], [3, 0.533333, 0]], [-0.00771189, [3, -0.533333, 0], [3, 0.4, 0]], [-0.00771189, [3, -0.4, 0], [3, 0.533333, 0]], [-0.00771189, [3, -0.533333, 0], [3, 0.666667, 0]], [-0.00771189, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.0797259, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.127364, [3, -0.386667, 0.121143], [3, 0.4, -0.12532]], [-0.659661, [3, -0.4, 0], [3, 0.4, 0]], [-0.653526, [3, -0.4, 0], [3, 0.4, 0]], [-1.20423, [3, -0.4, 0], [3, 0.533333, 0]], [-0.645856, [3, -0.533333, 0], [3, 0.4, 0]], [-0.656595, [3, -0.4, 0], [3, 0.533333, 0]], [-0.119694, [3, -0.533333, -0.110448], [3, 0.666667, 0.13806]], [0.0889301, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.113474, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.12728, [3, -0.386667, 0], [3, 0.4, 0]], [-0.0981341, [3, -0.4, 0], [3, 0.4, 0]], [-0.0981341, [3, -0.4, 0], [3, 0.4, 0]], [-0.052114, [3, -0.4, 0], [3, 0.533333, 0]], [-0.0981341, [3, -0.533333, 0], [3, 0.4, 0]], [-0.0981341, [3, -0.4, 0], [3, 0.533333, 0]], [-0.124212, [3, -0.533333, 0], [3, 0.666667, 0]], [-0.113474, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.406468, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.384992, [3, -0.386667, -0.00452414], [3, 0.4, 0.00468014]], [-0.378855, [3, -0.4, -0.00613656], [3, 0.4, 0.00613656]], [-0.056716, [3, -0.4, 0], [3, 0.4, 0]], [-0.056716, [3, -0.4, 0], [3, 0.533333, 0]], [-0.076658, [3, -0.533333, 0.019942], [3, 0.4, -0.0149565]], [-0.369652, [3, -0.4, 0.00805425], [3, 0.533333, -0.010739]], [-0.380391, [3, -0.533333, 0.00340895], [3, 0.666667, -0.00426119]], [-0.392662, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-1.22264, [3, -0.0133333, 0], [3, 0.386667, 0]], [-1.20423, [3, -0.386667, 0], [3, 0.4, 0]], [-1.20423, [3, -0.4, 0], [3, 0.4, 0]], [-1.22264, [3, -0.4, 0], [3, 0.4, 0]], [-1.22264, [3, -0.4, 0], [3, 0.533333, 0]], [-1.22264, [3, -0.533333, 0], [3, 0.4, 0]], [-1.22264, [3, -0.4, 0], [3, 0.533333, 0]], [-1.22264, [3, -0.533333, 0], [3, 0.666667, 0]], [-1.22264, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.2948, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.2948, [3, -0.386667, 0], [3, 0.4, 0]], [0.2948, [3, -0.4, 0], [3, 0.4, 0]], [0.2948, [3, -0.4, 0], [3, 0.4, 0]], [0.2948, [3, -0.4, 0], [3, 0.533333, 0]], [0.2948, [3, -0.533333, 0], [3, 0.4, 0]], [0.2948, [3, -0.4, 0], [3, 0.533333, 0]], [0.2948, [3, -0.533333, 0], [3, 0.666667, 0]], [0.2948, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.128898, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.326783, [3, -0.386667, -0.0593148], [3, 0.4, 0.0613601]], [0.490923, [3, -0.4, 0], [3, 0.4, 0]], [0.489389, [3, -0.4, 0], [3, 0.4, 0]], [0.493989, [3, -0.4, 0], [3, 0.533333, 0]], [0.487854, [3, -0.533333, 0], [3, 0.4, 0]], [0.487854, [3, -0.4, 0], [3, 0.533333, 0]], [0.329852, [3, -0.533333, 0.0545423], [3, 0.666667, -0.0681779]], [0.119694, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.130432, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.122762, [3, -0.386667, 0.00226198], [3, 0.4, -0.00233998]], [0.116626, [3, -0.4, 0], [3, 0.4, 0]], [0.11816, [3, -0.4, 0], [3, 0.4, 0]], [0.11816, [3, -0.4, 0], [3, 0.533333, 0]], [0.122762, [3, -0.533333, 0], [3, 0.4, 0]], [0.122762, [3, -0.4, 0], [3, 0.533333, 0]], [0.122762, [3, -0.533333, 0], [3, 0.666667, 0]], [0.122762, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.168698, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.164096, [3, -0.386667, -0.00460209], [3, 0.4, 0.00476079]], [-0.0275701, [3, -0.4, -0.00613605], [3, 0.4, 0.00613605]], [-0.021434, [3, -0.4, 0], [3, 0.4, 0]], [-0.021434, [3, -0.4, 0], [3, 0.533333, 0]], [-0.0183661, [3, -0.533333, 0], [3, 0.4, 0]], [-0.0183661, [3, -0.4, 0], [3, 0.533333, 0]], [-0.168698, [3, -0.533333, 0], [3, 0.666667, 0]], [-0.168698, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.0966839, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.0966839, [3, -0.386667, 0], [3, 0.4, 0]], [0.207048, [3, -0.4, -0.00153415], [3, 0.4, 0.00153415]], [0.208583, [3, -0.4, -0.00153415], [3, 0.4, 0.00153415]], [0.724006, [3, -0.4, 0], [3, 0.533333, 0]], [0.210117, [3, -0.533333, 0], [3, 0.4, 0]], [0.210117, [3, -0.4, 0], [3, 0.533333, 0]], [-0.0966839, [3, -0.533333, 0], [3, 0.666667, 0]], [-0.092082, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[1.45572, [3, -0.0133333, 0], [3, 0.386667, 0]], [1.48027, [3, -0.386667, 0], [3, 0.4, 0]], [1.47106, [3, -0.4, 0], [3, 0.4, 0]], [1.5585, [3, -0.4, 0], [3, 0.4, 0]], [1.5585, [3, -0.4, 0], [3, 0.533333, 0]], [1.52169, [3, -0.533333, 0.0154862], [3, 0.4, -0.0116147]], [1.4772, [3, -0.4, 0], [3, 0.533333, 0]], [1.4772, [3, -0.533333, 0], [3, 0.666667, 0]], [1.45879, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.199378, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.121144, [3, -0.386667, 0], [3, 0.4, 0]], [0.154892, [3, -0.4, -0.033748], [3, 0.4, 0.033748]], [1.26091, [3, -0.4, 0], [3, 0.4, 0]], [1.26091, [3, -0.4, 0], [3, 0.533333, 0]], [1.19034, [3, -0.533333, 0.0705637], [3, 0.4, -0.0529227]], [0.190175, [3, -0.4, 0.0161073], [3, 0.533333, -0.0214764]], [0.168698, [3, -0.533333, 0], [3, 0.666667, 0]], [0.20398, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.076658, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.0981341, [3, -0.386667, 0], [3, 0.4, 0]], [0.0981341, [3, -0.4, 0], [3, 0.4, 0]], [-0.510865, [3, -0.4, 0], [3, 0.4, 0]], [-0.510865, [3, -0.4, 0], [3, 0.533333, 0]], [-0.481718, [3, -0.533333, -0.029147], [3, 0.4, 0.0218602]], [0.0705221, [3, -0.4, 0], [3, 0.533333, 0]], [0.0705221, [3, -0.533333, 0], [3, 0.666667, 0]], [0.0812599, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.0890141, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.262356, [3, -0.386667, 0], [3, 0.4, 0]], [0.090548, [3, -0.4, 0], [3, 0.4, 0]], [0.0951499, [3, -0.4, 0], [3, 0.4, 0]], [0.0521979, [3, -0.4, 0], [3, 0.533333, 0]], [0.101286, [3, -0.533333, 0], [3, 0.4, 0]], [0.101286, [3, -0.4, 0], [3, 0.533333, 0]], [0.260822, [3, -0.533333, 0], [3, 0.666667, 0]], [0.066004, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.105888, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.06447, [3, -0.386667, 0.0138233], [3, 0.4, -0.0143]], [0.021518, [3, -0.4, 0.00460194], [3, 0.4, -0.00460194]], [0.016916, [3, -0.4, 0], [3, 0.4, 0]], [0.016916, [3, -0.4, 0], [3, 0.533333, 0]], [0.0138481, [3, -0.533333, 0], [3, 0.4, 0]], [0.0138481, [3, -0.4, 0], [3, 0.533333, 0]], [0.06447, [3, -0.533333, -0.0138628], [3, 0.666667, 0.0173285]], [0.107422, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.403483, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.400415, [3, -0.386667, 0.00306829], [3, 0.4, -0.0031741]], [0.194861, [3, -0.4, 0.0577805], [3, 0.4, -0.0577805]], [0.0537319, [3, -0.4, 0], [3, 0.4, 0]], [0.0537319, [3, -0.4, 0], [3, 0.533333, 0]], [0.07214, [3, -0.533333, -0.0184082], [3, 0.4, 0.0138061]], [0.174919, [3, -0.4, -0.0444859], [3, 0.533333, 0.0593145]], [0.383541, [3, -0.533333, -0.0085912], [3, 0.666667, 0.010739]], [0.39428, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[1.20722, [3, -0.0133333, 0], [3, 0.386667, 0]], [1.18881, [3, -0.386667, 0], [3, 0.4, 0]], [1.20568, [3, -0.4, -0.00997105], [3, 0.4, 0.00997105]], [1.24863, [3, -0.4, 0], [3, 0.4, 0]], [1.24863, [3, -0.4, 0], [3, 0.533333, 0]], [1.23329, [3, -0.533333, 0.00496735], [3, 0.4, -0.00372551]], [1.22256, [3, -0.4, 0.00306779], [3, 0.533333, -0.00409039]], [1.21182, [3, -0.533333, 0], [3, 0.666667, 0]], [1.21182, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.2948, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.2908, [3, -0.386667, 0], [3, 0.4, 0]], [0.2908, [3, -0.4, 0], [3, 0.4, 0]], [0.2776, [3, -0.4, 0], [3, 0.4, 0]], [0.2776, [3, -0.4, 0], [3, 0.533333, 0]], [0.284, [3, -0.533333, 0], [3, 0.4, 0]], [0.284, [3, -0.4, 0], [3, 0.533333, 0]], [0.284, [3, -0.533333, 0], [3, 0.666667, 0]], [0.284, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.130348, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.158044, [3, -0.386667, 0.144014], [3, 0.4, -0.14898]], [-0.748635, [3, -0.4, 0.00153411], [3, 0.4, -0.00153411]], [-0.750169, [3, -0.4, 0.00153411], [3, 0.4, -0.00153411]], [-1.31008, [3, -0.4, 0], [3, 0.533333, 0]], [-0.7471, [3, -0.533333, 0], [3, 0.4, 0]], [-0.7471, [3, -0.4, 0], [3, 0.533333, 0]], [-0.162646, [3, -0.533333, -0.131356], [3, 0.666667, 0.164195]], [0.139552, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.11961, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.076658, [3, -0.386667, -0.02262], [3, 0.4, 0.0234]], [0.01845, [3, -0.4, 0], [3, 0.4, 0]], [0.00924586, [3, -0.4, 0], [3, 0.4, 0]], [0.021518, [3, -0.4, 0], [3, 0.533333, 0]], [0.00157595, [3, -0.533333, 0], [3, 0.4, 0]], [0.0123138, [3, -0.4, 0], [3, 0.533333, 0]], [-0.0720561, [3, -0.533333, 0.0188625], [3, 0.666667, -0.0235781]], [-0.115008, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.168698, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.164096, [3, -0.386667, -0.00460209], [3, 0.4, 0.00476079]], [-0.0275701, [3, -0.4, -0.00613605], [3, 0.4, 0.00613605]], [-0.021434, [3, -0.4, 0], [3, 0.4, 0]], [-0.021434, [3, -0.4, 0], [3, 0.533333, 0]], [-0.0183661, [3, -0.533333, 0], [3, 0.4, 0]], [-0.0183661, [3, -0.4, 0], [3, 0.533333, 0]], [-0.168698, [3, -0.533333, 0], [3, 0.666667, 0]], [-0.168698, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.0981341, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.00149202, [3, -0.386667, -0.0966421], [3, 0.4, 0.0999746]], [0.688808, [3, -0.4, 0], [3, 0.4, 0]], [0.688808, [3, -0.4, 0], [3, 0.4, 0]], [1.2748, [3, -0.4, 0], [3, 0.533333, 0]], [0.688808, [3, -0.533333, 0], [3, 0.4, 0]], [0.688808, [3, -0.4, 0], [3, 0.533333, 0]], [-0.00149202, [3, -0.533333, 0.0760865], [3, 0.666667, -0.0951081]], [-0.0966001, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[1.47728, [3, -0.0133333, 0], [3, 0.386667, 0]], [1.49262, [3, -0.386667, -0.00402144], [3, 0.4, 0.00416011]], [1.50183, [3, -0.4, -0.00511351], [3, 0.4, 0.00511351]], [1.5233, [3, -0.4, 0], [3, 0.4, 0]], [1.5233, [3, -0.4, 0], [3, 0.533333, 0]], [1.49262, [3, -0.533333, 0], [3, 0.4, 0]], [1.49262, [3, -0.4, 0], [3, 0.533333, 0]], [1.49262, [3, -0.533333, 0], [3, 0.666667, 0]], [1.49262, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[-0.217869, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.188724, [3, -0.386667, -0.00148301], [3, 0.4, 0.00153415]], [-0.18719, [3, -0.4, 0], [3, 0.4, 0]], [-1.21344, [3, -0.4, 0], [3, 0.4, 0]], [-1.21344, [3, -0.4, 0], [3, 0.533333, 0]], [-1.14441, [3, -0.533333, -0.0690313], [3, 0.4, 0.0517734]], [-0.236277, [3, -0.4, -0.00805295], [3, 0.533333, 0.0107373]], [-0.22554, [3, -0.533333, 0], [3, 0.666667, 0]], [-0.22554, [3, -0.666667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0, 1.16, 2.36, 3.56, 4.76, 6.36, 7.56, 9.16, 11.16])
    keys.append([[0.139552, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.108872, [3, -0.386667, 0], [3, 0.4, 0]], [0.11961, [3, -0.4, -0.0107381], [3, 0.4, 0.0107381]], [0.205514, [3, -0.4, 0], [3, 0.4, 0]], [0.205514, [3, -0.4, 0], [3, 0.533333, 0]], [0.170232, [3, -0.533333, 0.00993451], [3, 0.4, -0.00745088]], [0.153358, [3, -0.4, 0], [3, 0.533333, 0]], [0.153358, [3, -0.533333, 0], [3, 0.666667, 0]], [0.141086, [3, -0.666667, 0], [3, 0, 0]]])


    tts.say("Now we will do the lunge exercise.")
    time.sleep(1)

    tts.say("First, stand with your feet shoulder width apart")
    time.sleep(1)

    tts.say("Next, with your torn A C L leg, take one large step forward")
    time.sleep(1) 

    tts.say("I am going to extend my arms to help with my balance, you can do this too if you need")
    time.sleep(1)

    tts.say("Now, lower your hips keeping your front foot flat on the ground and your back heel lifted")
    time.sleep(1)

    tts.say("This is how it should look")

    motion.angleInterpolationBezier(names, times, keys)

    tts.say("Finally, push yourself back up to the starting position focusing your weight on the heel of your front foot")

    return

